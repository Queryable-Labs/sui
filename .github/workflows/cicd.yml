name: CICD

on:
  push:
    branches:
      - 'devnet'
    tags:
      - 'v*'
    pull_request:
      branches:
        - 'devnet'

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Remove unused toolchains
        run: |
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" || true
      - name: Update local toolchain
        run: |
          rustup update
          rustup component add rustfmt
          rustup component add clippy
          rustup install nightly

      - name: Toolchain info
        run: |
          cargo --version --verbose
          rustc --version
          cargo clippy --version

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Lint
        run: |
          cargo fmt -- --check
          cargo clippy -- -D warnings -A clippy::await_holding_lock

      - name: Test
        run: |
          cargo check
          cargo test --all

      - name: Build
        run: |
          cargo build --release

  cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: queryable/sui

      - name: Build and push Docker image
          uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
          with:
            context: .
            push: true
            build-args:
              - PROFILE=release
              - BUILD_DATE="$(git describe --always --dirty --exclude '*')"
              - GIT_REVISION="$(date -u +'%Y-%m-%d')"
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}